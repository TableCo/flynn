// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReleaseType int32

const (
	ReleaseType_ANY    ReleaseType = 0
	ReleaseType_CODE   ReleaseType = 1
	ReleaseType_CONFIG ReleaseType = 2
)

var ReleaseType_name = map[int32]string{
	0: "ANY",
	1: "CODE",
	2: "CONFIG",
}

var ReleaseType_value = map[string]int32{
	"ANY":    0,
	"CODE":   1,
	"CONFIG": 2,
}

func (x ReleaseType) String() string {
	return proto.EnumName(ReleaseType_name, int32(x))
}

func (ReleaseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

type ScaleRequestState int32

const (
	ScaleRequestState_SCALE_PENDING   ScaleRequestState = 0
	ScaleRequestState_SCALE_CANCELLED ScaleRequestState = 1
	ScaleRequestState_SCALE_COMPLETE  ScaleRequestState = 2
)

var ScaleRequestState_name = map[int32]string{
	0: "SCALE_PENDING",
	1: "SCALE_CANCELLED",
	2: "SCALE_COMPLETE",
}

var ScaleRequestState_value = map[string]int32{
	"SCALE_PENDING":   0,
	"SCALE_CANCELLED": 1,
	"SCALE_COMPLETE":  2,
}

func (x ScaleRequestState) String() string {
	return proto.EnumName(ScaleRequestState_name, int32(x))
}

func (ScaleRequestState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

type DeploymentStatus int32

const (
	DeploymentStatus_PENDING  DeploymentStatus = 0
	DeploymentStatus_FAILED   DeploymentStatus = 1
	DeploymentStatus_RUNNING  DeploymentStatus = 2
	DeploymentStatus_COMPLETE DeploymentStatus = 3
)

var DeploymentStatus_name = map[int32]string{
	0: "PENDING",
	1: "FAILED",
	2: "RUNNING",
	3: "COMPLETE",
}

var DeploymentStatus_value = map[string]int32{
	"PENDING":  0,
	"FAILED":   1,
	"RUNNING":  2,
	"COMPLETE": 3,
}

func (x DeploymentStatus) String() string {
	return proto.EnumName(DeploymentStatus_name, int32(x))
}

func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

type LabelFilter_Expression_Operator int32

const (
	// OP_IN matches if there is a label entry where the value is in the given
	// values for the given key
	LabelFilter_Expression_OP_IN LabelFilter_Expression_Operator = 0
	// OP_NOT_IN matches if there are no label entries where the value is in
	// the given values for the given key
	LabelFilter_Expression_OP_NOT_IN LabelFilter_Expression_Operator = 1
	// OP_EXISTS matches if there is a label entry with the given key (given
	// values ignored and have undefined behavior)
	LabelFilter_Expression_OP_EXISTS LabelFilter_Expression_Operator = 2
	// OP_NOT_EXISTS matches if there are no label entries for the given key
	// (given values ignored and have undefined behavior)
	LabelFilter_Expression_OP_NOT_EXISTS LabelFilter_Expression_Operator = 3
)

var LabelFilter_Expression_Operator_name = map[int32]string{
	0: "OP_IN",
	1: "OP_NOT_IN",
	2: "OP_EXISTS",
	3: "OP_NOT_EXISTS",
}

var LabelFilter_Expression_Operator_value = map[string]int32{
	"OP_IN":         0,
	"OP_NOT_IN":     1,
	"OP_EXISTS":     2,
	"OP_NOT_EXISTS": 3,
}

func (x LabelFilter_Expression_Operator) String() string {
	return proto.EnumName(LabelFilter_Expression_Operator_name, int32(x))
}

func (LabelFilter_Expression_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0, 0, 0}
}

type DeploymentEvent_JobState int32

const (
	DeploymentEvent_PENDING  DeploymentEvent_JobState = 0
	DeploymentEvent_BLOCKED  DeploymentEvent_JobState = 1
	DeploymentEvent_STARTING DeploymentEvent_JobState = 2
	DeploymentEvent_UP       DeploymentEvent_JobState = 3
	DeploymentEvent_STOPPING DeploymentEvent_JobState = 5
	DeploymentEvent_DOWN     DeploymentEvent_JobState = 6
	// CRASHED and FAILURE are no longer valid job states,
	// but we still need to handle them in case they are set by old
	// schedulers still using the legacy code.
	DeploymentEvent_CRASHED DeploymentEvent_JobState = 7
	DeploymentEvent_FAILED  DeploymentEvent_JobState = 8
)

var DeploymentEvent_JobState_name = map[int32]string{
	0: "PENDING",
	1: "BLOCKED",
	2: "STARTING",
	3: "UP",
	5: "STOPPING",
	6: "DOWN",
	7: "CRASHED",
	8: "FAILED",
}

var DeploymentEvent_JobState_value = map[string]int32{
	"PENDING":  0,
	"BLOCKED":  1,
	"STARTING": 2,
	"UP":       3,
	"STOPPING": 5,
	"DOWN":     6,
	"CRASHED":  7,
	"FAILED":   8,
}

func (x DeploymentEvent_JobState) String() string {
	return proto.EnumName(DeploymentEvent_JobState_name, int32(x))
}

func (DeploymentEvent_JobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{27, 0}
}

type LabelFilter struct {
	// expressions are ANDed together.
	Expressions          []*LabelFilter_Expression `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LabelFilter) Reset()         { *m = LabelFilter{} }
func (m *LabelFilter) String() string { return proto.CompactTextString(m) }
func (*LabelFilter) ProtoMessage()    {}
func (*LabelFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

func (m *LabelFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelFilter.Unmarshal(m, b)
}
func (m *LabelFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelFilter.Marshal(b, m, deterministic)
}
func (m *LabelFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelFilter.Merge(m, src)
}
func (m *LabelFilter) XXX_Size() int {
	return xxx_messageInfo_LabelFilter.Size(m)
}
func (m *LabelFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelFilter.DiscardUnknown(m)
}

var xxx_messageInfo_LabelFilter proto.InternalMessageInfo

func (m *LabelFilter) GetExpressions() []*LabelFilter_Expression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type LabelFilter_Expression struct {
	Key                  string                          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Op                   LabelFilter_Expression_Operator `protobuf:"varint,2,opt,name=op,proto3,enum=controller.LabelFilter_Expression_Operator" json:"op,omitempty"`
	Values               []string                        `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *LabelFilter_Expression) Reset()         { *m = LabelFilter_Expression{} }
func (m *LabelFilter_Expression) String() string { return proto.CompactTextString(m) }
func (*LabelFilter_Expression) ProtoMessage()    {}
func (*LabelFilter_Expression) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0, 0}
}

func (m *LabelFilter_Expression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelFilter_Expression.Unmarshal(m, b)
}
func (m *LabelFilter_Expression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelFilter_Expression.Marshal(b, m, deterministic)
}
func (m *LabelFilter_Expression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelFilter_Expression.Merge(m, src)
}
func (m *LabelFilter_Expression) XXX_Size() int {
	return xxx_messageInfo_LabelFilter_Expression.Size(m)
}
func (m *LabelFilter_Expression) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelFilter_Expression.DiscardUnknown(m)
}

var xxx_messageInfo_LabelFilter_Expression proto.InternalMessageInfo

func (m *LabelFilter_Expression) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LabelFilter_Expression) GetOp() LabelFilter_Expression_Operator {
	if m != nil {
		return m.Op
	}
	return LabelFilter_Expression_OP_IN
}

func (m *LabelFilter_Expression) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type StreamAppsRequest struct {
	// The maximum number of resources to return in the initial page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used for pagination. Must be a next_page_token returned from a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Specifies an optional list of resource names that should be looked up. The
	// list length must be smaller than page_size. This can be used to request a
	// known set of one or more resources and optionally receive updates about
	// them, and can also be used to retrieve a single resource.
	NameFilters []string `protobuf:"bytes,3,rep,name=name_filters,json=nameFilters,proto3" json:"name_filters,omitempty"`
	// filters are ORed
	LabelFilters []*LabelFilter `protobuf:"bytes,4,rep,name=label_filters,json=labelFilters,proto3" json:"label_filters,omitempty"`
	// When true, leaves the stream open and sends any updates to each resource
	// returned in the initial page until the stream is closed.
	StreamUpdates bool `protobuf:"varint,5,opt,name=stream_updates,json=streamUpdates,proto3" json:"stream_updates,omitempty"`
	// When true, leaves the stream open and sends newly created resources
	// matching the filters until the stream is closed. page_token must not be
	// set.
	StreamCreates        bool     `protobuf:"varint,6,opt,name=stream_creates,json=streamCreates,proto3" json:"stream_creates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamAppsRequest) Reset()         { *m = StreamAppsRequest{} }
func (m *StreamAppsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamAppsRequest) ProtoMessage()    {}
func (*StreamAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

func (m *StreamAppsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAppsRequest.Unmarshal(m, b)
}
func (m *StreamAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAppsRequest.Marshal(b, m, deterministic)
}
func (m *StreamAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAppsRequest.Merge(m, src)
}
func (m *StreamAppsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamAppsRequest.Size(m)
}
func (m *StreamAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAppsRequest proto.InternalMessageInfo

func (m *StreamAppsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *StreamAppsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *StreamAppsRequest) GetNameFilters() []string {
	if m != nil {
		return m.NameFilters
	}
	return nil
}

func (m *StreamAppsRequest) GetLabelFilters() []*LabelFilter {
	if m != nil {
		return m.LabelFilters
	}
	return nil
}

func (m *StreamAppsRequest) GetStreamUpdates() bool {
	if m != nil {
		return m.StreamUpdates
	}
	return false
}

func (m *StreamAppsRequest) GetStreamCreates() bool {
	if m != nil {
		return m.StreamCreates
	}
	return false
}

type StreamAppsResponse struct {
	Apps []*App `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	// Set to true on the last response for the initial page.
	PageComplete         bool     `protobuf:"varint,2,opt,name=page_complete,json=pageComplete,proto3" json:"page_complete,omitempty"`
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamAppsResponse) Reset()         { *m = StreamAppsResponse{} }
func (m *StreamAppsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamAppsResponse) ProtoMessage()    {}
func (*StreamAppsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

func (m *StreamAppsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAppsResponse.Unmarshal(m, b)
}
func (m *StreamAppsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAppsResponse.Marshal(b, m, deterministic)
}
func (m *StreamAppsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAppsResponse.Merge(m, src)
}
func (m *StreamAppsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamAppsResponse.Size(m)
}
func (m *StreamAppsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAppsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAppsResponse proto.InternalMessageInfo

func (m *StreamAppsResponse) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *StreamAppsResponse) GetPageComplete() bool {
	if m != nil {
		return m.PageComplete
	}
	return false
}

func (m *StreamAppsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type StreamReleasesRequest struct {
	// The maximum number of resources to return in the initial page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used for pagination. Must be a next_page_token returned from a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Specifies an optional list of resource names that should be looked up. The
	// list length must be smaller than page_size. This can be used to request a
	// known set of one or more resources and optionally receive updates about
	// them, and can also be used to retrieve a single resource. Parent resource
	// names may also be used to filter resources.
	NameFilters []string `protobuf:"bytes,3,rep,name=name_filters,json=nameFilters,proto3" json:"name_filters,omitempty"`
	// filters are ORed
	LabelFilters []*LabelFilter `protobuf:"bytes,4,rep,name=label_filters,json=labelFilters,proto3" json:"label_filters,omitempty"`
	// When true, leaves the stream open and sends any updates (i.e. resource
	// deletions) to each resource returned in the initial page until the stream
	// is closed.
	StreamUpdates bool `protobuf:"varint,5,opt,name=stream_updates,json=streamUpdates,proto3" json:"stream_updates,omitempty"`
	// When true, leaves the stream open and sends newly created resources
	// matching the filters until the stream is closed. page_token must not be
	// set.
	StreamCreates        bool     `protobuf:"varint,6,opt,name=stream_creates,json=streamCreates,proto3" json:"stream_creates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamReleasesRequest) Reset()         { *m = StreamReleasesRequest{} }
func (m *StreamReleasesRequest) String() string { return proto.CompactTextString(m) }
func (*StreamReleasesRequest) ProtoMessage()    {}
func (*StreamReleasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{3}
}

func (m *StreamReleasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamReleasesRequest.Unmarshal(m, b)
}
func (m *StreamReleasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamReleasesRequest.Marshal(b, m, deterministic)
}
func (m *StreamReleasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamReleasesRequest.Merge(m, src)
}
func (m *StreamReleasesRequest) XXX_Size() int {
	return xxx_messageInfo_StreamReleasesRequest.Size(m)
}
func (m *StreamReleasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamReleasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamReleasesRequest proto.InternalMessageInfo

func (m *StreamReleasesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *StreamReleasesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *StreamReleasesRequest) GetNameFilters() []string {
	if m != nil {
		return m.NameFilters
	}
	return nil
}

func (m *StreamReleasesRequest) GetLabelFilters() []*LabelFilter {
	if m != nil {
		return m.LabelFilters
	}
	return nil
}

func (m *StreamReleasesRequest) GetStreamUpdates() bool {
	if m != nil {
		return m.StreamUpdates
	}
	return false
}

func (m *StreamReleasesRequest) GetStreamCreates() bool {
	if m != nil {
		return m.StreamCreates
	}
	return false
}

type StreamReleasesResponse struct {
	Releases []*Release `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	// Set to true on the last response for the initial page.
	PageComplete         bool     `protobuf:"varint,2,opt,name=page_complete,json=pageComplete,proto3" json:"page_complete,omitempty"`
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamReleasesResponse) Reset()         { *m = StreamReleasesResponse{} }
func (m *StreamReleasesResponse) String() string { return proto.CompactTextString(m) }
func (*StreamReleasesResponse) ProtoMessage()    {}
func (*StreamReleasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{4}
}

func (m *StreamReleasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamReleasesResponse.Unmarshal(m, b)
}
func (m *StreamReleasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamReleasesResponse.Marshal(b, m, deterministic)
}
func (m *StreamReleasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamReleasesResponse.Merge(m, src)
}
func (m *StreamReleasesResponse) XXX_Size() int {
	return xxx_messageInfo_StreamReleasesResponse.Size(m)
}
func (m *StreamReleasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamReleasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamReleasesResponse proto.InternalMessageInfo

func (m *StreamReleasesResponse) GetReleases() []*Release {
	if m != nil {
		return m.Releases
	}
	return nil
}

func (m *StreamReleasesResponse) GetPageComplete() bool {
	if m != nil {
		return m.PageComplete
	}
	return false
}

func (m *StreamReleasesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type StreamScalesRequest struct {
	// The maximum number of resources to return in the initial page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used for pagination. Must be a next_page_token returned from a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Specifies an optional list of resource names that should be looked up. The
	// list length must be smaller than page_size. This can be used to request a
	// known set of one or more resources and optionally receive updates about
	// them, and can also be used to retrieve a single resource. Parent resource
	// names may also be used to filter resources.
	NameFilters []string `protobuf:"bytes,3,rep,name=name_filters,json=nameFilters,proto3" json:"name_filters,omitempty"`
	// When set, only includes resources having one of the specified states
	StateFilters []ScaleRequestState `protobuf:"varint,4,rep,packed,name=state_filters,json=stateFilters,proto3,enum=controller.ScaleRequestState" json:"state_filters,omitempty"`
	// When true, leaves the stream open and sends any updates to each resource
	// returned in the initial page until the stream is closed.
	StreamUpdates bool `protobuf:"varint,5,opt,name=stream_updates,json=streamUpdates,proto3" json:"stream_updates,omitempty"`
	// When true, leaves the stream open and sends newly created resources
	// matching the filters until the stream is closed. page_token must not be
	// set.
	StreamCreates        bool     `protobuf:"varint,6,opt,name=stream_creates,json=streamCreates,proto3" json:"stream_creates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamScalesRequest) Reset()         { *m = StreamScalesRequest{} }
func (m *StreamScalesRequest) String() string { return proto.CompactTextString(m) }
func (*StreamScalesRequest) ProtoMessage()    {}
func (*StreamScalesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{5}
}

func (m *StreamScalesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamScalesRequest.Unmarshal(m, b)
}
func (m *StreamScalesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamScalesRequest.Marshal(b, m, deterministic)
}
func (m *StreamScalesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamScalesRequest.Merge(m, src)
}
func (m *StreamScalesRequest) XXX_Size() int {
	return xxx_messageInfo_StreamScalesRequest.Size(m)
}
func (m *StreamScalesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamScalesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamScalesRequest proto.InternalMessageInfo

func (m *StreamScalesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *StreamScalesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *StreamScalesRequest) GetNameFilters() []string {
	if m != nil {
		return m.NameFilters
	}
	return nil
}

func (m *StreamScalesRequest) GetStateFilters() []ScaleRequestState {
	if m != nil {
		return m.StateFilters
	}
	return nil
}

func (m *StreamScalesRequest) GetStreamUpdates() bool {
	if m != nil {
		return m.StreamUpdates
	}
	return false
}

func (m *StreamScalesRequest) GetStreamCreates() bool {
	if m != nil {
		return m.StreamCreates
	}
	return false
}

type StreamScalesResponse struct {
	ScaleRequests []*ScaleRequest `protobuf:"bytes,1,rep,name=scale_requests,json=scaleRequests,proto3" json:"scale_requests,omitempty"`
	// Set to true on the last response for the initial page.
	PageComplete         bool     `protobuf:"varint,2,opt,name=page_complete,json=pageComplete,proto3" json:"page_complete,omitempty"`
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamScalesResponse) Reset()         { *m = StreamScalesResponse{} }
func (m *StreamScalesResponse) String() string { return proto.CompactTextString(m) }
func (*StreamScalesResponse) ProtoMessage()    {}
func (*StreamScalesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{6}
}

func (m *StreamScalesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamScalesResponse.Unmarshal(m, b)
}
func (m *StreamScalesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamScalesResponse.Marshal(b, m, deterministic)
}
func (m *StreamScalesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamScalesResponse.Merge(m, src)
}
func (m *StreamScalesResponse) XXX_Size() int {
	return xxx_messageInfo_StreamScalesResponse.Size(m)
}
func (m *StreamScalesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamScalesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamScalesResponse proto.InternalMessageInfo

func (m *StreamScalesResponse) GetScaleRequests() []*ScaleRequest {
	if m != nil {
		return m.ScaleRequests
	}
	return nil
}

func (m *StreamScalesResponse) GetPageComplete() bool {
	if m != nil {
		return m.PageComplete
	}
	return false
}

func (m *StreamScalesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type StreamDeploymentsRequest struct {
	// The maximum number of resources to return in the initial page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Used for pagination. Must be a next_page_token returned from a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Specifies an optional list of resource names that should be looked up. The
	// list length must be smaller than page_size. This can be used to request a
	// known set of one or more resources and optionally receive updates about
	// them, and can also be used to retrieve a single resource. Parent resource
	// names may also be used to filter resources.
	NameFilters []string `protobuf:"bytes,3,rep,name=name_filters,json=nameFilters,proto3" json:"name_filters,omitempty"`
	// Specified an optional list of release types. If provided, only resources
	// with these release types will be returned.
	TypeFilters []ReleaseType `protobuf:"varint,4,rep,packed,name=type_filters,json=typeFilters,proto3,enum=controller.ReleaseType" json:"type_filters,omitempty"`
	// filters are ORed
	LabelFilters []*LabelFilter `protobuf:"bytes,5,rep,name=label_filters,json=labelFilters,proto3" json:"label_filters,omitempty"`
	// When true, leaves the stream open and sends any updates to each resource
	// returned in the initial page until the stream is closed.
	StreamUpdates bool `protobuf:"varint,6,opt,name=stream_updates,json=streamUpdates,proto3" json:"stream_updates,omitempty"`
	// When true, leaves the stream open and sends newly created resources
	// matching the filters until the stream is closed. page_token must not be
	// set.
	StreamCreates        bool     `protobuf:"varint,7,opt,name=stream_creates,json=streamCreates,proto3" json:"stream_creates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeploymentsRequest) Reset()         { *m = StreamDeploymentsRequest{} }
func (m *StreamDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamDeploymentsRequest) ProtoMessage()    {}
func (*StreamDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{7}
}

func (m *StreamDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeploymentsRequest.Unmarshal(m, b)
}
func (m *StreamDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeploymentsRequest.Marshal(b, m, deterministic)
}
func (m *StreamDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeploymentsRequest.Merge(m, src)
}
func (m *StreamDeploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamDeploymentsRequest.Size(m)
}
func (m *StreamDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeploymentsRequest proto.InternalMessageInfo

func (m *StreamDeploymentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *StreamDeploymentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *StreamDeploymentsRequest) GetNameFilters() []string {
	if m != nil {
		return m.NameFilters
	}
	return nil
}

func (m *StreamDeploymentsRequest) GetTypeFilters() []ReleaseType {
	if m != nil {
		return m.TypeFilters
	}
	return nil
}

func (m *StreamDeploymentsRequest) GetLabelFilters() []*LabelFilter {
	if m != nil {
		return m.LabelFilters
	}
	return nil
}

func (m *StreamDeploymentsRequest) GetStreamUpdates() bool {
	if m != nil {
		return m.StreamUpdates
	}
	return false
}

func (m *StreamDeploymentsRequest) GetStreamCreates() bool {
	if m != nil {
		return m.StreamCreates
	}
	return false
}

type StreamDeploymentsResponse struct {
	Deployments []*ExpandedDeployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	// Set to true on the last response for the initial page.
	PageComplete         bool     `protobuf:"varint,2,opt,name=page_complete,json=pageComplete,proto3" json:"page_complete,omitempty"`
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDeploymentsResponse) Reset()         { *m = StreamDeploymentsResponse{} }
func (m *StreamDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeploymentsResponse) ProtoMessage()    {}
func (*StreamDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{8}
}

func (m *StreamDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeploymentsResponse.Unmarshal(m, b)
}
func (m *StreamDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeploymentsResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeploymentsResponse.Merge(m, src)
}
func (m *StreamDeploymentsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeploymentsResponse.Size(m)
}
func (m *StreamDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeploymentsResponse proto.InternalMessageInfo

func (m *StreamDeploymentsResponse) GetDeployments() []*ExpandedDeployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *StreamDeploymentsResponse) GetPageComplete() bool {
	if m != nil {
		return m.PageComplete
	}
	return false
}

func (m *StreamDeploymentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type UpdateAppRequest struct {
	App                  *App                  `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateAppRequest) Reset()         { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()    {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{9}
}

func (m *UpdateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppRequest.Unmarshal(m, b)
}
func (m *UpdateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppRequest.Merge(m, src)
}
func (m *UpdateAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppRequest.Size(m)
}
func (m *UpdateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppRequest proto.InternalMessageInfo

func (m *UpdateAppRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *UpdateAppRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type CreateScaleRequest struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent    string           `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Processes map[string]int32 `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CreateScaleRequest) Reset()         { *m = CreateScaleRequest{} }
func (m *CreateScaleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateScaleRequest) ProtoMessage()    {}
func (*CreateScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{10}
}

func (m *CreateScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScaleRequest.Unmarshal(m, b)
}
func (m *CreateScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScaleRequest.Marshal(b, m, deterministic)
}
func (m *CreateScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScaleRequest.Merge(m, src)
}
func (m *CreateScaleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateScaleRequest.Size(m)
}
func (m *CreateScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScaleRequest proto.InternalMessageInfo

func (m *CreateScaleRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateScaleRequest) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *CreateScaleRequest) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateReleaseRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Release              *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseRequest) Reset()         { *m = CreateReleaseRequest{} }
func (m *CreateReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseRequest) ProtoMessage()    {}
func (*CreateReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{11}
}

func (m *CreateReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseRequest.Unmarshal(m, b)
}
func (m *CreateReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseRequest.Merge(m, src)
}
func (m *CreateReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseRequest.Size(m)
}
func (m *CreateReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseRequest proto.InternalMessageInfo

func (m *CreateReleaseRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateReleaseRequest) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *CreateReleaseRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type CreateDeploymentRequest struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// optional scale request
	ScaleRequest         *CreateScaleRequest `protobuf:"bytes,2,opt,name=scale_request,json=scaleRequest,proto3" json:"scale_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateDeploymentRequest) Reset()         { *m = CreateDeploymentRequest{} }
func (m *CreateDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeploymentRequest) ProtoMessage()    {}
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{12}
}

func (m *CreateDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeploymentRequest.Unmarshal(m, b)
}
func (m *CreateDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeploymentRequest.Merge(m, src)
}
func (m *CreateDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeploymentRequest.Size(m)
}
func (m *CreateDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeploymentRequest proto.InternalMessageInfo

func (m *CreateDeploymentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateDeploymentRequest) GetScaleRequest() *CreateScaleRequest {
	if m != nil {
		return m.ScaleRequest
	}
	return nil
}

type App struct {
	// name = "apps/APP_ID"
	Name          string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   string            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Labels        map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout int32             `protobuf:"varint,4,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	Strategy      string            `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// release = Release.name
	Release              string               `protobuf:"bytes,6,opt,name=release,proto3" json:"release,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DeleteTime           *timestamp.Timestamp `protobuf:"bytes,9,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}
func (*App) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{13}
}

func (m *App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_App.Unmarshal(m, b)
}
func (m *App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_App.Marshal(b, m, deterministic)
}
func (m *App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_App.Merge(m, src)
}
func (m *App) XXX_Size() int {
	return xxx_messageInfo_App.Size(m)
}
func (m *App) XXX_DiscardUnknown() {
	xxx_messageInfo_App.DiscardUnknown(m)
}

var xxx_messageInfo_App proto.InternalMessageInfo

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *App) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *App) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *App) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *App) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *App) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *App) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *App) GetDeleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeleteTime
	}
	return nil
}

// See github.com/flynn/flynn/host/types Mount
type HostHealthCheck struct {
	// Type is one of tcp, http, https
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Interval is the time to wait between checks after the service has been
	// marked as up. It defaults to two seconds.
	Interval *duration.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// Threshold is the number of consecutive checks of the same status before
	// a service will be marked as up or down after coming up for the first
	// time. It defaults to 2.
	Threshold int32 `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// If KillDown is true, the job will be killed if the service goes down (or
	// does not come up)
	KillDown bool `protobuf:"varint,5,opt,name=kill_down,json=killDown,proto3" json:"kill_down,omitempty"`
	// StartTimeout is the maximum duration that a service can take to come up
	// for the first time if KillDown is true. It defaults to ten seconds.
	StartTimeout *duration.Duration `protobuf:"bytes,6,opt,name=start_timeout,json=startTimeout,proto3" json:"start_timeout,omitempty"`
	// Extra optional config fields for http/https checks
	Path                 string   `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Host                 string   `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Match                string   `protobuf:"bytes,9,opt,name=match,proto3" json:"match,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostHealthCheck) Reset()         { *m = HostHealthCheck{} }
func (m *HostHealthCheck) String() string { return proto.CompactTextString(m) }
func (*HostHealthCheck) ProtoMessage()    {}
func (*HostHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{14}
}

func (m *HostHealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostHealthCheck.Unmarshal(m, b)
}
func (m *HostHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostHealthCheck.Marshal(b, m, deterministic)
}
func (m *HostHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostHealthCheck.Merge(m, src)
}
func (m *HostHealthCheck) XXX_Size() int {
	return xxx_messageInfo_HostHealthCheck.Size(m)
}
func (m *HostHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HostHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HostHealthCheck proto.InternalMessageInfo

func (m *HostHealthCheck) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HostHealthCheck) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *HostHealthCheck) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *HostHealthCheck) GetKillDown() bool {
	if m != nil {
		return m.KillDown
	}
	return false
}

func (m *HostHealthCheck) GetStartTimeout() *duration.Duration {
	if m != nil {
		return m.StartTimeout
	}
	return nil
}

func (m *HostHealthCheck) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HostHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HostHealthCheck) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *HostHealthCheck) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// See github.com/flynn/flynn/host/types Mount
type HostService struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Create the service in service discovery
	Create               bool             `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
	Check                *HostHealthCheck `protobuf:"bytes,3,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HostService) Reset()         { *m = HostService{} }
func (m *HostService) String() string { return proto.CompactTextString(m) }
func (*HostService) ProtoMessage()    {}
func (*HostService) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{15}
}

func (m *HostService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostService.Unmarshal(m, b)
}
func (m *HostService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostService.Marshal(b, m, deterministic)
}
func (m *HostService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostService.Merge(m, src)
}
func (m *HostService) XXX_Size() int {
	return xxx_messageInfo_HostService.Size(m)
}
func (m *HostService) XXX_DiscardUnknown() {
	xxx_messageInfo_HostService.DiscardUnknown(m)
}

var xxx_messageInfo_HostService proto.InternalMessageInfo

func (m *HostService) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *HostService) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

func (m *HostService) GetCheck() *HostHealthCheck {
	if m != nil {
		return m.Check
	}
	return nil
}

type Port struct {
	Port                 int32        `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Proto                string       `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Service              *HostService `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{16}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Port) GetService() *HostService {
	if m != nil {
		return m.Service
	}
	return nil
}

type VolumeReq struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DeleteOnStop         bool     `protobuf:"varint,2,opt,name=delete_on_stop,json=deleteOnStop,proto3" json:"delete_on_stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeReq) Reset()         { *m = VolumeReq{} }
func (m *VolumeReq) String() string { return proto.CompactTextString(m) }
func (*VolumeReq) ProtoMessage()    {}
func (*VolumeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{17}
}

func (m *VolumeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeReq.Unmarshal(m, b)
}
func (m *VolumeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeReq.Marshal(b, m, deterministic)
}
func (m *VolumeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeReq.Merge(m, src)
}
func (m *VolumeReq) XXX_Size() int {
	return xxx_messageInfo_VolumeReq.Size(m)
}
func (m *VolumeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeReq proto.InternalMessageInfo

func (m *VolumeReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeReq) GetDeleteOnStop() bool {
	if m != nil {
		return m.DeleteOnStop
	}
	return false
}

// See github.com/flynn/flynn/host/resource Spec
type HostResourceSpec struct {
	// Request, if set, is the amount of resource a job expects to consume,
	// so the job should only be placed on a host with at least this amount
	// of resource available, and once scheduled this amount of resource
	// should then be unavailable on the given host.
	Request int64 `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	// Limit, if set, is an upper limit on the amount of resource a job can
	// consume, the outcome of hitting this limit being implementation
	// defined (e.g. a system error, throttling, catchable / uncatchable
	// signals etc.)
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostResourceSpec) Reset()         { *m = HostResourceSpec{} }
func (m *HostResourceSpec) String() string { return proto.CompactTextString(m) }
func (*HostResourceSpec) ProtoMessage()    {}
func (*HostResourceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{18}
}

func (m *HostResourceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostResourceSpec.Unmarshal(m, b)
}
func (m *HostResourceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostResourceSpec.Marshal(b, m, deterministic)
}
func (m *HostResourceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostResourceSpec.Merge(m, src)
}
func (m *HostResourceSpec) XXX_Size() int {
	return xxx_messageInfo_HostResourceSpec.Size(m)
}
func (m *HostResourceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HostResourceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HostResourceSpec proto.InternalMessageInfo

func (m *HostResourceSpec) GetRequest() int64 {
	if m != nil {
		return m.Request
	}
	return 0
}

func (m *HostResourceSpec) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// See github.com/flynn/flynn/host/types Mount
type HostMount struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Writable             bool     `protobuf:"varint,3,opt,name=writable,proto3" json:"writable,omitempty"`
	Device               string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Flags                int32    `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMount) Reset()         { *m = HostMount{} }
func (m *HostMount) String() string { return proto.CompactTextString(m) }
func (*HostMount) ProtoMessage()    {}
func (*HostMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{19}
}

func (m *HostMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMount.Unmarshal(m, b)
}
func (m *HostMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMount.Marshal(b, m, deterministic)
}
func (m *HostMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMount.Merge(m, src)
}
func (m *HostMount) XXX_Size() int {
	return xxx_messageInfo_HostMount.Size(m)
}
func (m *HostMount) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMount.DiscardUnknown(m)
}

var xxx_messageInfo_HostMount proto.InternalMessageInfo

func (m *HostMount) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *HostMount) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *HostMount) GetWritable() bool {
	if m != nil {
		return m.Writable
	}
	return false
}

func (m *HostMount) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *HostMount) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *HostMount) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

// See github.com/opencontainers/runc/libcontainer/configs Device
type LibContainerDevice struct {
	// Device type, block, char, etc.
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Path to the device.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Major is the device's major number.
	Major int64 `protobuf:"varint,3,opt,name=major,proto3" json:"major,omitempty"`
	// Minor is the device's minor number.
	Minor int64 `protobuf:"varint,4,opt,name=minor,proto3" json:"minor,omitempty"`
	// Cgroup permissions format, rwm.
	Permissions string `protobuf:"bytes,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// FileMode permission bits for the device.
	FileMode uint32 `protobuf:"varint,6,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	// Uid of the device.
	Uid uint32 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	// Gid of the device.
	Gid uint32 `protobuf:"varint,8,opt,name=gid,proto3" json:"gid,omitempty"`
	// Write the file to the allowed list
	Allow                bool     `protobuf:"varint,9,opt,name=allow,proto3" json:"allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LibContainerDevice) Reset()         { *m = LibContainerDevice{} }
func (m *LibContainerDevice) String() string { return proto.CompactTextString(m) }
func (*LibContainerDevice) ProtoMessage()    {}
func (*LibContainerDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{20}
}

func (m *LibContainerDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibContainerDevice.Unmarshal(m, b)
}
func (m *LibContainerDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibContainerDevice.Marshal(b, m, deterministic)
}
func (m *LibContainerDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibContainerDevice.Merge(m, src)
}
func (m *LibContainerDevice) XXX_Size() int {
	return xxx_messageInfo_LibContainerDevice.Size(m)
}
func (m *LibContainerDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LibContainerDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LibContainerDevice proto.InternalMessageInfo

func (m *LibContainerDevice) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LibContainerDevice) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *LibContainerDevice) GetMajor() int64 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *LibContainerDevice) GetMinor() int64 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *LibContainerDevice) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

func (m *LibContainerDevice) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

func (m *LibContainerDevice) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LibContainerDevice) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *LibContainerDevice) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

type ProcessType struct {
	Args                 []string                     `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env                  map[string]string            `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports                []*Port                      `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Volumes              []*VolumeReq                 `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Omni                 bool                         `protobuf:"varint,5,opt,name=omni,proto3" json:"omni,omitempty"`
	HostNetwork          bool                         `protobuf:"varint,6,opt,name=host_network,json=hostNetwork,proto3" json:"host_network,omitempty"`
	HostPidNamespace     bool                         `protobuf:"varint,7,opt,name=host_pid_namespace,json=hostPidNamespace,proto3" json:"host_pid_namespace,omitempty"`
	Service              string                       `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`
	Resurrect            bool                         `protobuf:"varint,9,opt,name=resurrect,proto3" json:"resurrect,omitempty"`
	Resources            map[string]*HostResourceSpec `protobuf:"bytes,10,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mounts               []*HostMount                 `protobuf:"bytes,11,rep,name=mounts,proto3" json:"mounts,omitempty"`
	LinuxCapabilities    []string                     `protobuf:"bytes,12,rep,name=linux_capabilities,json=linuxCapabilities,proto3" json:"linux_capabilities,omitempty"`
	AllowedDevices       []*LibContainerDevice        `protobuf:"bytes,13,rep,name=allowed_devices,json=allowedDevices,proto3" json:"allowed_devices,omitempty"`
	WriteableCgroups     bool                         `protobuf:"varint,14,opt,name=writeable_cgroups,json=writeableCgroups,proto3" json:"writeable_cgroups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ProcessType) Reset()         { *m = ProcessType{} }
func (m *ProcessType) String() string { return proto.CompactTextString(m) }
func (*ProcessType) ProtoMessage()    {}
func (*ProcessType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{21}
}

func (m *ProcessType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessType.Unmarshal(m, b)
}
func (m *ProcessType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessType.Marshal(b, m, deterministic)
}
func (m *ProcessType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessType.Merge(m, src)
}
func (m *ProcessType) XXX_Size() int {
	return xxx_messageInfo_ProcessType.Size(m)
}
func (m *ProcessType) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessType.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessType proto.InternalMessageInfo

func (m *ProcessType) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ProcessType) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ProcessType) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ProcessType) GetVolumes() []*VolumeReq {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *ProcessType) GetOmni() bool {
	if m != nil {
		return m.Omni
	}
	return false
}

func (m *ProcessType) GetHostNetwork() bool {
	if m != nil {
		return m.HostNetwork
	}
	return false
}

func (m *ProcessType) GetHostPidNamespace() bool {
	if m != nil {
		return m.HostPidNamespace
	}
	return false
}

func (m *ProcessType) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ProcessType) GetResurrect() bool {
	if m != nil {
		return m.Resurrect
	}
	return false
}

func (m *ProcessType) GetResources() map[string]*HostResourceSpec {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ProcessType) GetMounts() []*HostMount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *ProcessType) GetLinuxCapabilities() []string {
	if m != nil {
		return m.LinuxCapabilities
	}
	return nil
}

func (m *ProcessType) GetAllowedDevices() []*LibContainerDevice {
	if m != nil {
		return m.AllowedDevices
	}
	return nil
}

func (m *ProcessType) GetWriteableCgroups() bool {
	if m != nil {
		return m.WriteableCgroups
	}
	return false
}

type Release struct {
	// name = "apps/APP_ID/releases/RELEASE_ID"
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artifacts            []string                `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Env                  map[string]string       `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string       `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Processes            map[string]*ProcessType `protobuf:"bytes,6,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type                 ReleaseType             `protobuf:"varint,7,opt,name=type,proto3,enum=controller.ReleaseType" json:"type,omitempty"`
	CreateTime           *timestamp.Timestamp    `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	DeleteTime           *timestamp.Timestamp    `protobuf:"bytes,9,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{22}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Release) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Release) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Release) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Release) GetProcesses() map[string]*ProcessType {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Release) GetType() ReleaseType {
	if m != nil {
		return m.Type
	}
	return ReleaseType_ANY
}

func (m *Release) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Release) GetDeleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeleteTime
	}
	return nil
}

type ScaleRequest struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// name = "apps/APP_ID/releases/RELEASE_ID/scales/SCALE_REQUEST_ID"
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State        ScaleRequestState `protobuf:"varint,3,opt,name=state,proto3,enum=controller.ScaleRequestState" json:"state,omitempty"`
	OldProcesses map[string]int32  `protobuf:"bytes,4,rep,name=old_processes,json=oldProcesses,proto3" json:"old_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NewProcesses map[string]int32  `protobuf:"bytes,5,rep,name=new_processes,json=newProcesses,proto3" json:"new_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	OldTags              map[string]*DeploymentProcessTags `protobuf:"bytes,6,rep,name=old_tags,json=oldTags,proto3" json:"old_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NewTags              map[string]*DeploymentProcessTags `protobuf:"bytes,7,rep,name=new_tags,json=newTags,proto3" json:"new_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp              `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ScaleRequest) Reset()         { *m = ScaleRequest{} }
func (m *ScaleRequest) String() string { return proto.CompactTextString(m) }
func (*ScaleRequest) ProtoMessage()    {}
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{23}
}

func (m *ScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleRequest.Unmarshal(m, b)
}
func (m *ScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleRequest.Marshal(b, m, deterministic)
}
func (m *ScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleRequest.Merge(m, src)
}
func (m *ScaleRequest) XXX_Size() int {
	return xxx_messageInfo_ScaleRequest.Size(m)
}
func (m *ScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleRequest proto.InternalMessageInfo

func (m *ScaleRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ScaleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScaleRequest) GetState() ScaleRequestState {
	if m != nil {
		return m.State
	}
	return ScaleRequestState_SCALE_PENDING
}

func (m *ScaleRequest) GetOldProcesses() map[string]int32 {
	if m != nil {
		return m.OldProcesses
	}
	return nil
}

func (m *ScaleRequest) GetNewProcesses() map[string]int32 {
	if m != nil {
		return m.NewProcesses
	}
	return nil
}

func (m *ScaleRequest) GetOldTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.OldTags
	}
	return nil
}

func (m *ScaleRequest) GetNewTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.NewTags
	}
	return nil
}

func (m *ScaleRequest) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ScaleRequest) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type DeploymentProcessTags struct {
	Tags                 map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeploymentProcessTags) Reset()         { *m = DeploymentProcessTags{} }
func (m *DeploymentProcessTags) String() string { return proto.CompactTextString(m) }
func (*DeploymentProcessTags) ProtoMessage()    {}
func (*DeploymentProcessTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{24}
}

func (m *DeploymentProcessTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentProcessTags.Unmarshal(m, b)
}
func (m *DeploymentProcessTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentProcessTags.Marshal(b, m, deterministic)
}
func (m *DeploymentProcessTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentProcessTags.Merge(m, src)
}
func (m *DeploymentProcessTags) XXX_Size() int {
	return xxx_messageInfo_DeploymentProcessTags.Size(m)
}
func (m *DeploymentProcessTags) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentProcessTags.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentProcessTags proto.InternalMessageInfo

func (m *DeploymentProcessTags) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Deployment struct {
	// name = "apps/APP_ID/deployments/DEPLOYMENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// old_release = Release.name
	OldRelease string `protobuf:"bytes,3,opt,name=old_release,json=oldRelease,proto3" json:"old_release,omitempty"`
	// new_release = Release.name
	NewRelease string           `protobuf:"bytes,4,opt,name=new_release,json=newRelease,proto3" json:"new_release,omitempty"`
	Strategy   string           `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Status     DeploymentStatus `protobuf:"varint,6,opt,name=status,proto3,enum=controller.DeploymentStatus" json:"status,omitempty"`
	Processes  map[string]int32 `protobuf:"bytes,7,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout        int32                             `protobuf:"varint,9,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EndTime              *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{25}
}

func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deployment) GetOldRelease() string {
	if m != nil {
		return m.OldRelease
	}
	return ""
}

func (m *Deployment) GetNewRelease() string {
	if m != nil {
		return m.NewRelease
	}
	return ""
}

func (m *Deployment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Deployment) GetStatus() DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return DeploymentStatus_PENDING
}

func (m *Deployment) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Deployment) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Deployment) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *Deployment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Deployment) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *Deployment) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type ExpandedDeployment struct {
	// name = "apps/APP_ID/deployments/DEPLOYMENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// old_release = Release.name
	OldRelease *Release `protobuf:"bytes,3,opt,name=old_release,json=oldRelease,proto3" json:"old_release,omitempty"`
	// new_release = Release.name
	NewRelease *Release         `protobuf:"bytes,4,opt,name=new_release,json=newRelease,proto3" json:"new_release,omitempty"`
	Type       ReleaseType      `protobuf:"varint,5,opt,name=type,proto3,enum=controller.ReleaseType" json:"type,omitempty"`
	Strategy   string           `protobuf:"bytes,6,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Status     DeploymentStatus `protobuf:"varint,7,opt,name=status,proto3,enum=controller.DeploymentStatus" json:"status,omitempty"`
	Processes  map[string]int32 `protobuf:"bytes,8,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout        int32                             `protobuf:"varint,10,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EndTime              *timestamp.Timestamp              `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExpandedDeployment) Reset()         { *m = ExpandedDeployment{} }
func (m *ExpandedDeployment) String() string { return proto.CompactTextString(m) }
func (*ExpandedDeployment) ProtoMessage()    {}
func (*ExpandedDeployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{26}
}

func (m *ExpandedDeployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedDeployment.Unmarshal(m, b)
}
func (m *ExpandedDeployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedDeployment.Marshal(b, m, deterministic)
}
func (m *ExpandedDeployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedDeployment.Merge(m, src)
}
func (m *ExpandedDeployment) XXX_Size() int {
	return xxx_messageInfo_ExpandedDeployment.Size(m)
}
func (m *ExpandedDeployment) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedDeployment.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedDeployment proto.InternalMessageInfo

func (m *ExpandedDeployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExpandedDeployment) GetOldRelease() *Release {
	if m != nil {
		return m.OldRelease
	}
	return nil
}

func (m *ExpandedDeployment) GetNewRelease() *Release {
	if m != nil {
		return m.NewRelease
	}
	return nil
}

func (m *ExpandedDeployment) GetType() ReleaseType {
	if m != nil {
		return m.Type
	}
	return ReleaseType_ANY
}

func (m *ExpandedDeployment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *ExpandedDeployment) GetStatus() DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return DeploymentStatus_PENDING
}

func (m *ExpandedDeployment) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *ExpandedDeployment) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ExpandedDeployment) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *ExpandedDeployment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ExpandedDeployment) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *ExpandedDeployment) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type DeploymentEvent struct {
	Deployment           *Deployment              `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	JobType              string                   `protobuf:"bytes,2,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	JobState             DeploymentEvent_JobState `protobuf:"varint,3,opt,name=job_state,json=jobState,proto3,enum=controller.DeploymentEvent_JobState" json:"job_state,omitempty"`
	Error                string                   `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
	CreateTime           *timestamp.Timestamp     `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeploymentEvent) Reset()         { *m = DeploymentEvent{} }
func (m *DeploymentEvent) String() string { return proto.CompactTextString(m) }
func (*DeploymentEvent) ProtoMessage()    {}
func (*DeploymentEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{27}
}

func (m *DeploymentEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentEvent.Unmarshal(m, b)
}
func (m *DeploymentEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentEvent.Marshal(b, m, deterministic)
}
func (m *DeploymentEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEvent.Merge(m, src)
}
func (m *DeploymentEvent) XXX_Size() int {
	return xxx_messageInfo_DeploymentEvent.Size(m)
}
func (m *DeploymentEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEvent proto.InternalMessageInfo

func (m *DeploymentEvent) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentEvent) GetJobType() string {
	if m != nil {
		return m.JobType
	}
	return ""
}

func (m *DeploymentEvent) GetJobState() DeploymentEvent_JobState {
	if m != nil {
		return m.JobState
	}
	return DeploymentEvent_PENDING
}

func (m *DeploymentEvent) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *DeploymentEvent) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("controller.ReleaseType", ReleaseType_name, ReleaseType_value)
	proto.RegisterEnum("controller.ScaleRequestState", ScaleRequestState_name, ScaleRequestState_value)
	proto.RegisterEnum("controller.DeploymentStatus", DeploymentStatus_name, DeploymentStatus_value)
	proto.RegisterEnum("controller.LabelFilter_Expression_Operator", LabelFilter_Expression_Operator_name, LabelFilter_Expression_Operator_value)
	proto.RegisterEnum("controller.DeploymentEvent_JobState", DeploymentEvent_JobState_name, DeploymentEvent_JobState_value)
	proto.RegisterType((*LabelFilter)(nil), "controller.LabelFilter")
	proto.RegisterType((*LabelFilter_Expression)(nil), "controller.LabelFilter.Expression")
	proto.RegisterType((*StreamAppsRequest)(nil), "controller.StreamAppsRequest")
	proto.RegisterType((*StreamAppsResponse)(nil), "controller.StreamAppsResponse")
	proto.RegisterType((*StreamReleasesRequest)(nil), "controller.StreamReleasesRequest")
	proto.RegisterType((*StreamReleasesResponse)(nil), "controller.StreamReleasesResponse")
	proto.RegisterType((*StreamScalesRequest)(nil), "controller.StreamScalesRequest")
	proto.RegisterType((*StreamScalesResponse)(nil), "controller.StreamScalesResponse")
	proto.RegisterType((*StreamDeploymentsRequest)(nil), "controller.StreamDeploymentsRequest")
	proto.RegisterType((*StreamDeploymentsResponse)(nil), "controller.StreamDeploymentsResponse")
	proto.RegisterType((*UpdateAppRequest)(nil), "controller.UpdateAppRequest")
	proto.RegisterType((*CreateScaleRequest)(nil), "controller.CreateScaleRequest")
	proto.RegisterMapType((map[string]int32)(nil), "controller.CreateScaleRequest.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.CreateScaleRequest.TagsEntry")
	proto.RegisterType((*CreateReleaseRequest)(nil), "controller.CreateReleaseRequest")
	proto.RegisterType((*CreateDeploymentRequest)(nil), "controller.CreateDeploymentRequest")
	proto.RegisterType((*App)(nil), "controller.App")
	proto.RegisterMapType((map[string]string)(nil), "controller.App.LabelsEntry")
	proto.RegisterType((*HostHealthCheck)(nil), "controller.HostHealthCheck")
	proto.RegisterType((*HostService)(nil), "controller.HostService")
	proto.RegisterType((*Port)(nil), "controller.Port")
	proto.RegisterType((*VolumeReq)(nil), "controller.VolumeReq")
	proto.RegisterType((*HostResourceSpec)(nil), "controller.HostResourceSpec")
	proto.RegisterType((*HostMount)(nil), "controller.HostMount")
	proto.RegisterType((*LibContainerDevice)(nil), "controller.LibContainerDevice")
	proto.RegisterType((*ProcessType)(nil), "controller.ProcessType")
	proto.RegisterMapType((map[string]string)(nil), "controller.ProcessType.EnvEntry")
	proto.RegisterMapType((map[string]*HostResourceSpec)(nil), "controller.ProcessType.ResourcesEntry")
	proto.RegisterType((*Release)(nil), "controller.Release")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.EnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.LabelsEntry")
	proto.RegisterMapType((map[string]*ProcessType)(nil), "controller.Release.ProcessesEntry")
	proto.RegisterType((*ScaleRequest)(nil), "controller.ScaleRequest")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ScaleRequest.NewProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ScaleRequest.NewTagsEntry")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ScaleRequest.OldProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ScaleRequest.OldTagsEntry")
	proto.RegisterType((*DeploymentProcessTags)(nil), "controller.DeploymentProcessTags")
	proto.RegisterMapType((map[string]string)(nil), "controller.DeploymentProcessTags.TagsEntry")
	proto.RegisterType((*Deployment)(nil), "controller.Deployment")
	proto.RegisterMapType((map[string]int32)(nil), "controller.Deployment.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.Deployment.TagsEntry")
	proto.RegisterType((*ExpandedDeployment)(nil), "controller.ExpandedDeployment")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ExpandedDeployment.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ExpandedDeployment.TagsEntry")
	proto.RegisterType((*DeploymentEvent)(nil), "controller.DeploymentEvent")
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_ed7f10298fa1d90f) }

var fileDescriptor_ed7f10298fa1d90f = []byte{
	// 2692 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x3a, 0x4f, 0x73, 0xdb, 0xc6,
	0xf5, 0x22, 0x29, 0x92, 0xc0, 0x03, 0x29, 0x53, 0x9b, 0xc4, 0x66, 0x18, 0xc7, 0x96, 0x99, 0x3f,
	0xe3, 0xb1, 0x63, 0xfa, 0x17, 0xc5, 0x49, 0x7e, 0x4d, 0x3c, 0x75, 0x64, 0x92, 0x8a, 0xd5, 0xc8,
	0xa4, 0x66, 0x29, 0xb7, 0x69, 0x3a, 0x1d, 0x0e, 0x44, 0xac, 0x24, 0x44, 0x20, 0x80, 0x02, 0xa0,
	0x64, 0xa5, 0x3d, 0xf5, 0x90, 0x73, 0x73, 0xe9, 0xad, 0x87, 0xce, 0xe4, 0xd4, 0x99, 0x7e, 0x82,
	0x5e, 0xda, 0x4f, 0xd0, 0xe9, 0xa9, 0xe7, 0x9e, 0xfa, 0x19, 0x7a, 0xe9, 0x74, 0xde, 0xee, 0x82,
	0x5c, 0x12, 0xa0, 0x28, 0xd9, 0x6e, 0xa6, 0xd3, 0xde, 0xf6, 0xbd, 0x7d, 0xef, 0xe1, 0xed, 0xfb,
	0xb7, 0x6f, 0x77, 0x01, 0x95, 0x81, 0xe7, 0x46, 0x81, 0xe7, 0x38, 0x2c, 0x68, 0xf8, 0x81, 0x17,
	0x79, 0x04, 0x26, 0x98, 0xda, 0xd5, 0x03, 0xcf, 0x3b, 0x70, 0xd8, 0x5d, 0xd3, 0xb7, 0xef, 0x9a,
	0xae, 0xeb, 0x45, 0x66, 0x64, 0x7b, 0x6e, 0x28, 0x28, 0x6b, 0xd7, 0xe5, 0x2c, 0x87, 0xf6, 0x46,
	0xfb, 0x77, 0x23, 0x7b, 0xc8, 0xc2, 0xc8, 0x1c, 0xfa, 0x92, 0xe0, 0xda, 0x2c, 0x81, 0x35, 0x0a,
	0xb8, 0x04, 0x39, 0xbf, 0x36, 0x3b, 0xbf, 0x6f, 0x33, 0xc7, 0xea, 0x0f, 0xcd, 0xf0, 0x48, 0x50,
	0xd4, 0xbf, 0xc9, 0x82, 0xb1, 0x6d, 0xee, 0x31, 0x67, 0xd3, 0x76, 0x22, 0x16, 0x90, 0x16, 0x18,
	0xec, 0xa9, 0x1f, 0xb0, 0x30, 0x44, 0x3d, 0xaa, 0x99, 0xb5, 0xdc, 0x4d, 0x63, 0xbd, 0xde, 0x50,
	0x16, 0xa1, 0x50, 0x37, 0xda, 0x63, 0x52, 0xaa, 0xb2, 0xd5, 0xfe, 0x90, 0x01, 0x98, 0xcc, 0x91,
	0x0a, 0xe4, 0x8e, 0xd8, 0x69, 0x35, 0xb3, 0x96, 0xb9, 0xa9, 0x53, 0x1c, 0x92, 0x8f, 0x21, 0xeb,
	0xf9, 0xd5, 0xec, 0x5a, 0xe6, 0xe6, 0xca, 0xfa, 0xed, 0xc5, 0xd2, 0x1b, 0x5d, 0x9f, 0x05, 0x66,
	0xe4, 0x05, 0x34, 0xeb, 0xf9, 0xe4, 0x32, 0x14, 0x8e, 0x4d, 0x67, 0xc4, 0xc2, 0x6a, 0x6e, 0x2d,
	0x77, 0x53, 0xa7, 0x12, 0xaa, 0x6f, 0x82, 0x16, 0xd3, 0x11, 0x1d, 0xf2, 0xdd, 0x9d, 0xfe, 0x56,
	0xa7, 0xb2, 0x44, 0xca, 0xa0, 0x77, 0x77, 0xfa, 0x9d, 0xee, 0x2e, 0x82, 0x19, 0x09, 0xb6, 0x3f,
	0xdf, 0xea, 0xed, 0xf6, 0x2a, 0x59, 0xb2, 0x0a, 0x65, 0x39, 0x2b, 0x51, 0xb9, 0xfa, 0x3f, 0x33,
	0xb0, 0xda, 0x8b, 0x02, 0x66, 0x0e, 0x37, 0x7c, 0x3f, 0xa4, 0xec, 0x67, 0x23, 0x16, 0x46, 0xe4,
	0x35, 0xd0, 0x7d, 0xf3, 0x80, 0xf5, 0x43, 0xfb, 0x2b, 0xc6, 0x97, 0x92, 0xa7, 0x1a, 0x22, 0x7a,
	0xf6, 0x57, 0x8c, 0xbc, 0x0e, 0xc0, 0x27, 0x23, 0xef, 0x88, 0xb9, 0x7c, 0x5d, 0x3a, 0xe5, 0xe4,
	0xbb, 0x88, 0x20, 0x37, 0xa0, 0xe4, 0x9a, 0x43, 0xd6, 0xdf, 0xe7, 0x0b, 0x8b, 0xf5, 0x36, 0x10,
	0x27, 0xd6, 0x1a, 0x92, 0xfb, 0x50, 0x76, 0x70, 0xed, 0x63, 0x9a, 0x65, 0x6e, 0xfa, 0x2b, 0x73,
	0x8c, 0x43, 0x4b, 0xce, 0x04, 0x08, 0xc9, 0x5b, 0xb0, 0x12, 0x72, 0x8d, 0xfb, 0x23, 0xdf, 0x32,
	0x23, 0x16, 0x56, 0xf3, 0x6b, 0x99, 0x9b, 0x1a, 0x2d, 0x0b, 0xec, 0x13, 0x81, 0x54, 0xc8, 0x06,
	0x01, 0xe3, 0x64, 0x05, 0x95, 0xac, 0x29, 0x90, 0xf5, 0xaf, 0x33, 0x40, 0x54, 0x03, 0x84, 0xbe,
	0xe7, 0x86, 0x8c, 0xbc, 0x01, 0xcb, 0xa6, 0xef, 0xc7, 0x41, 0x71, 0x49, 0xd5, 0x6c, 0xc3, 0xf7,
	0x29, 0x9f, 0x24, 0x6f, 0x40, 0x99, 0x5b, 0x62, 0xe0, 0x0d, 0x7d, 0x87, 0x45, 0x8c, 0x1b, 0x43,
	0xa3, 0x25, 0x44, 0x36, 0x25, 0x8e, 0xbc, 0x0d, 0x97, 0x5c, 0xf6, 0x34, 0xea, 0x2b, 0x36, 0xcb,
	0x71, 0x9b, 0x95, 0x11, 0xbd, 0x13, 0xdb, 0xad, 0xfe, 0xcb, 0x2c, 0xbc, 0x22, 0x14, 0xa1, 0xcc,
	0x61, 0x66, 0xc8, 0xfe, 0x17, 0xbd, 0xf1, 0xeb, 0x0c, 0x5c, 0x9e, 0x35, 0x82, 0xf4, 0xc8, 0x5d,
	0xd0, 0x02, 0x89, 0x93, 0x5e, 0x79, 0x49, 0xd5, 0x50, 0xd2, 0xd3, 0x31, 0xd1, 0x8b, 0xf5, 0xce,
	0xd7, 0x59, 0x78, 0x49, 0x28, 0xd6, 0x1b, 0x98, 0xce, 0x77, 0xe6, 0x9b, 0x87, 0x50, 0x0e, 0x23,
	0x33, 0x62, 0x53, 0xbe, 0x59, 0x59, 0x7f, 0x5d, 0x5d, 0x39, 0x57, 0x48, 0xea, 0xd3, 0x43, 0x62,
	0x5a, 0xe2, 0x3c, 0xff, 0x1e, 0x0f, 0x7d, 0x9b, 0x81, 0x97, 0xa7, 0x0d, 0x21, 0xfd, 0xf3, 0x00,
	0x56, 0x42, 0xc4, 0xf4, 0x03, 0xa1, 0x4a, 0xec, 0xa5, 0xea, 0x3c, 0x5d, 0x69, 0x39, 0x54, 0xa0,
	0x17, 0xec, 0xaf, 0x3f, 0x65, 0xa1, 0x2a, 0xd4, 0x6c, 0x31, 0xdf, 0xf1, 0x4e, 0x87, 0xcc, 0x8d,
	0xbe, 0x2b, 0xa7, 0x7d, 0x04, 0xa5, 0xe8, 0xd4, 0x9f, 0xf5, 0xd9, 0x95, 0x94, 0x68, 0xdd, 0x3d,
	0xf5, 0x19, 0x35, 0x90, 0x78, 0x6e, 0x32, 0xe6, 0x9f, 0x2f, 0x19, 0x0b, 0xe7, 0x73, 0x75, 0x31,
	0xcd, 0xd5, 0xbf, 0xcb, 0xc0, 0xab, 0x29, 0x36, 0x94, 0xfe, 0xfe, 0x04, 0x0c, 0x6b, 0x82, 0x96,
	0xce, 0xbe, 0xa6, 0xea, 0xd9, 0x7e, 0xea, 0x9b, 0xae, 0xc5, 0xac, 0x09, 0x37, 0x55, 0x59, 0x5e,
	0xac, 0xc3, 0x03, 0xa8, 0x88, 0xe5, 0x61, 0x79, 0x96, 0x7e, 0xbe, 0x01, 0x39, 0xd3, 0xf7, 0xb9,
	0x87, 0x53, 0x6a, 0x38, 0xce, 0x91, 0x8f, 0xc1, 0x10, 0xa6, 0xe2, 0x8d, 0x02, 0xd7, 0xc0, 0x58,
	0xaf, 0x35, 0x44, 0x2f, 0xd1, 0x88, 0x7b, 0x89, 0xc6, 0x26, 0xf6, 0x12, 0x8f, 0xcd, 0xf0, 0x88,
	0x82, 0x20, 0xc7, 0x71, 0xfd, 0x2f, 0x59, 0x20, 0xc2, 0x58, 0x6a, 0x5c, 0xe3, 0x9e, 0xed, 0x9b,
	0x01, 0x73, 0x23, 0xd9, 0x05, 0x48, 0x88, 0x7c, 0x06, 0xba, 0x1f, 0x78, 0x03, 0x16, 0x62, 0x09,
	0xcb, 0x72, 0x7b, 0xdd, 0x51, 0x95, 0x4a, 0x8a, 0x6a, 0xec, 0xc4, 0xf4, 0x6d, 0x37, 0x0a, 0x4e,
	0xe9, 0x84, 0x9f, 0xdc, 0x87, 0xe5, 0xc8, 0x3c, 0x10, 0xf1, 0x67, 0xac, 0xdf, 0x5c, 0x20, 0x67,
	0xd7, 0x3c, 0x90, 0x22, 0x38, 0x57, 0xed, 0x3e, 0xac, 0x4c, 0x8b, 0x4e, 0xe9, 0x5b, 0x5e, 0x86,
	0x3c, 0x6f, 0x36, 0xb8, 0x51, 0xf2, 0x54, 0x00, 0x1f, 0x65, 0xff, 0x3f, 0x53, 0xfb, 0x02, 0xf4,
	0xb1, 0xc0, 0x14, 0xc6, 0x0f, 0x55, 0x46, 0x63, 0xfd, 0x86, 0xaa, 0xdb, 0x24, 0x16, 0xe4, 0xf7,
	0x51, 0x90, 0x22, 0xbb, 0xfe, 0x0b, 0x78, 0x59, 0xe8, 0x1f, 0x17, 0xf4, 0x05, 0x46, 0xbd, 0x03,
	0x45, 0x59, 0xf1, 0xe5, 0xe7, 0x52, 0x77, 0x85, 0x98, 0x06, 0xb3, 0x5b, 0xd6, 0xa7, 0xbe, 0x6d,
	0xc9, 0x48, 0xd2, 0x25, 0x66, 0xcb, 0xaa, 0x1f, 0xc3, 0x15, 0xf1, 0x75, 0x25, 0x66, 0x17, 0x28,
	0xd0, 0x84, 0xf2, 0x54, 0xdd, 0x93, 0x6a, 0x5c, 0x3b, 0xdb, 0x23, 0xb4, 0xa4, 0x16, 0xbf, 0xfa,
	0x1f, 0x73, 0x90, 0xdb, 0xf0, 0x7d, 0x42, 0x60, 0x19, 0x2b, 0x89, 0xfc, 0x04, 0x1f, 0x63, 0xc5,
	0xb1, 0xec, 0xd0, 0x77, 0xcc, 0xd3, 0x3e, 0x9f, 0x13, 0x25, 0xc9, 0x90, 0xb8, 0x0e, 0x92, 0xbc,
	0x07, 0x05, 0x5e, 0x07, 0xe2, 0x70, 0x78, 0x6d, 0x26, 0xd6, 0x45, 0xc9, 0x90, 0x11, 0x20, 0x49,
	0xb1, 0x0a, 0x88, 0x6c, 0xec, 0x63, 0xab, 0xed, 0x8d, 0xa2, 0xea, 0x32, 0x77, 0x74, 0x59, 0x60,
	0x77, 0x05, 0x92, 0xd4, 0x40, 0x0b, 0xa3, 0xc0, 0x8c, 0xd8, 0xc1, 0x29, 0xdf, 0x38, 0x74, 0x3a,
	0x86, 0x49, 0x75, 0x62, 0xfc, 0x02, 0x9f, 0x1a, 0xdb, 0xf9, 0x63, 0x30, 0x44, 0x6d, 0xe1, 0xc2,
	0x79, 0x7d, 0x49, 0xcb, 0xab, 0xdd, 0xb8, 0xc9, 0xa7, 0x20, 0xc8, 0x11, 0xa1, 0x24, 0x25, 0x67,
	0xd6, 0x16, 0x33, 0x0b, 0xf2, 0x98, 0xd9, 0x62, 0x58, 0x3a, 0x04, 0xb3, 0xbe, 0x98, 0x59, 0x90,
	0x23, 0xa2, 0xf6, 0x3d, 0x79, 0x42, 0x38, 0x5f, 0x52, 0xe8, 0x6a, 0xe0, 0xfe, 0x3e, 0x0b, 0x97,
	0x1e, 0x79, 0x61, 0xf4, 0x88, 0x99, 0x4e, 0x74, 0xd8, 0x3c, 0x64, 0x83, 0x23, 0x74, 0x27, 0x16,
	0xf7, 0xd8, 0x9d, 0x38, 0x26, 0xef, 0x83, 0x66, 0xbb, 0x11, 0x0b, 0x8e, 0x4d, 0x87, 0xc7, 0x9f,
	0xb1, 0xfe, 0x6a, 0x42, 0xb9, 0x96, 0x3c, 0xda, 0xd0, 0x31, 0x29, 0xb9, 0x0a, 0x7a, 0x74, 0x18,
	0xb0, 0xf0, 0xd0, 0x73, 0x2c, 0xe9, 0xa8, 0x09, 0x02, 0x77, 0xb4, 0x23, 0xdb, 0x71, 0xfa, 0x96,
	0x77, 0xe2, 0xca, 0xed, 0x5d, 0x43, 0x44, 0xcb, 0x3b, 0x71, 0xc9, 0xf7, 0x79, 0x13, 0x11, 0x44,
	0x63, 0x3f, 0x17, 0x16, 0x7d, 0xb6, 0xc4, 0xe9, 0xe3, 0x08, 0x20, 0xb0, 0xec, 0x9b, 0xd1, 0x21,
	0x77, 0xa2, 0x4e, 0xf9, 0x18, 0x71, 0x87, 0x5e, 0x18, 0x71, 0xdf, 0xe8, 0x94, 0x8f, 0xd1, 0x36,
	0x43, 0x33, 0x1a, 0x1c, 0x72, 0x9b, 0xeb, 0x54, 0x00, 0x98, 0x37, 0xd8, 0x8e, 0x8c, 0xc2, 0x2a,
	0x70, 0xad, 0x25, 0x54, 0xff, 0x39, 0x18, 0x68, 0xae, 0x1e, 0x0b, 0x8e, 0xed, 0x41, 0x32, 0xca,
	0x33, 0xc9, 0x28, 0xbf, 0x0c, 0x05, 0x11, 0x24, 0x72, 0xa3, 0x90, 0x10, 0x79, 0x17, 0xf2, 0x03,
	0x34, 0xb7, 0x34, 0xe7, 0x54, 0xf0, 0xcf, 0x78, 0x84, 0x0a, 0xca, 0xfa, 0x00, 0x96, 0x77, 0xbc,
	0x40, 0x2c, 0xcd, 0x0b, 0x22, 0xd9, 0x04, 0xf0, 0x31, 0x2e, 0x83, 0x5b, 0x24, 0x76, 0xb1, 0x38,
	0xc9, 0xbe, 0x0b, 0xc5, 0x50, 0xa8, 0x2a, 0x3f, 0x73, 0x65, 0xf6, 0x33, 0x72, 0x25, 0x34, 0xa6,
	0xab, 0xb7, 0x41, 0xff, 0xa1, 0xe7, 0x8c, 0x86, 0x98, 0xe5, 0x63, 0x23, 0x66, 0x14, 0x23, 0xbe,
	0x89, 0x19, 0xc8, 0x43, 0xd5, 0x73, 0xfb, 0x61, 0x24, 0x4f, 0x89, 0x1a, 0x2d, 0x09, 0x6c, 0xd7,
	0xed, 0x45, 0x9e, 0x5f, 0x7f, 0x08, 0x15, 0x14, 0x4f, 0x59, 0xe8, 0x8d, 0x82, 0x01, 0xeb, 0xf9,
	0x6c, 0x20, 0x12, 0x4f, 0x94, 0x1b, 0x14, 0x98, 0xa3, 0x31, 0x88, 0xda, 0x3b, 0xf6, 0xd0, 0x16,
	0x65, 0x28, 0x47, 0x05, 0x50, 0xff, 0x4d, 0x06, 0x74, 0x14, 0xf2, 0xd8, 0x1b, 0xb9, 0x3c, 0xa5,
	0x1d, 0x6f, 0xc0, 0x5d, 0x2d, 0xf5, 0x19, 0xc3, 0x68, 0xe4, 0xc8, 0x0c, 0x0e, 0x58, 0x24, 0x97,
	0x2f, 0x21, 0xe4, 0x39, 0x09, 0xec, 0xc8, 0xdc, 0x73, 0x84, 0x01, 0x34, 0x3a, 0x86, 0x91, 0xc7,
	0x62, 0xdc, 0x34, 0xcb, 0x82, 0x47, 0x40, 0xb8, 0x66, 0xcb, 0x8c, 0x4c, 0x59, 0x36, 0xf8, 0x18,
	0xf5, 0xdb, 0x77, 0x70, 0xe3, 0x2a, 0x88, 0x5d, 0x85, 0x03, 0xf5, 0xbf, 0x65, 0x80, 0x6c, 0xdb,
	0x7b, 0x4d, 0xcf, 0x8d, 0x4c, 0xdb, 0x65, 0x41, 0x6b, 0x2c, 0x60, 0x9c, 0x3f, 0x79, 0x99, 0x3f,
	0xb1, 0x21, 0xb3, 0x8a, 0x21, 0x79, 0xe4, 0x7d, 0xe9, 0x05, 0x5c, 0xb3, 0x1c, 0x15, 0x00, 0xc7,
	0xda, 0xae, 0x17, 0x70, 0xad, 0x10, 0x8b, 0x00, 0x59, 0x03, 0xc3, 0x67, 0xc1, 0xd0, 0x96, 0xa7,
	0x7e, 0xa1, 0x9b, 0x8a, 0xc2, 0x64, 0xda, 0xb7, 0x1d, 0xd6, 0x1f, 0x7a, 0x96, 0xa8, 0x6b, 0x65,
	0xaa, 0x21, 0xe2, 0xb1, 0x67, 0x31, 0x2c, 0x09, 0x23, 0xdb, 0xe2, 0xb9, 0x50, 0xa6, 0x38, 0x44,
	0xcc, 0x81, 0x6d, 0xf1, 0x4c, 0x28, 0x53, 0x1c, 0xe2, 0x87, 0x4d, 0xc7, 0xf1, 0x4e, 0x78, 0x22,
	0x68, 0x54, 0x00, 0xf5, 0x7f, 0xe4, 0xc1, 0x88, 0x37, 0x3d, 0xb9, 0x10, 0x33, 0x38, 0x10, 0x9d,
	0x93, 0x4e, 0xf9, 0x98, 0xac, 0x43, 0x8e, 0xb9, 0xc7, 0xb2, 0x39, 0x58, 0x53, 0x23, 0x4c, 0xe1,
	0x6c, 0xb4, 0xdd, 0x63, 0x51, 0xca, 0x91, 0x98, 0xbc, 0x0d, 0x79, 0x8c, 0xdb, 0xb8, 0xf6, 0x57,
	0xa6, 0xb8, 0xbc, 0x20, 0xa2, 0x62, 0x9a, 0xdc, 0x85, 0xe2, 0x31, 0x0f, 0xc7, 0xf8, 0x84, 0xf7,
	0x8a, 0x4a, 0x39, 0x8e, 0x54, 0x1a, 0x53, 0xa1, 0x82, 0xde, 0xd0, 0xb5, 0x65, 0x3d, 0xe1, 0x63,
	0x4c, 0x53, 0xcc, 0xf5, 0xbe, 0xcb, 0xa2, 0x13, 0x2f, 0x38, 0x92, 0xfd, 0xa5, 0x81, 0xb8, 0x8e,
	0x40, 0x91, 0x77, 0x80, 0x70, 0x12, 0xdf, 0xb6, 0x78, 0x2a, 0x87, 0xbe, 0x39, 0x60, 0xb2, 0xc3,
	0xac, 0xe0, 0xcc, 0x8e, 0x6d, 0x75, 0x62, 0x3c, 0x46, 0x72, 0x9c, 0x57, 0xa2, 0x96, 0xc4, 0x20,
	0x56, 0xbc, 0x80, 0x85, 0xa3, 0x20, 0x60, 0x83, 0x48, 0x5a, 0x72, 0x82, 0x20, 0x2d, 0x3e, 0xcb,
	0x33, 0x02, 0x2b, 0x0b, 0xae, 0xe7, 0xed, 0x79, 0xf6, 0x8a, 0x53, 0x27, 0xee, 0xa2, 0xc6, 0x8c,
	0xe4, 0x0e, 0x14, 0x86, 0x98, 0x12, 0x61, 0xd5, 0x48, 0x9a, 0x64, 0x9c, 0x30, 0x54, 0x12, 0x91,
	0x3b, 0x40, 0x1c, 0xdb, 0x1d, 0x3d, 0xed, 0x0f, 0x4c, 0xdf, 0xdc, 0xb3, 0x1d, 0x3b, 0xb2, 0x59,
	0x58, 0x2d, 0x71, 0x07, 0xae, 0xf2, 0x99, 0xa6, 0x32, 0x41, 0x3e, 0x85, 0x4b, 0xdc, 0xf5, 0xcc,
	0xea, 0x8b, 0x8c, 0x08, 0xab, 0xe5, 0x64, 0x9b, 0x9c, 0x8c, 0x7b, 0xba, 0x22, 0xd9, 0x04, 0x18,
	0x92, 0xdb, 0xb0, 0x8a, 0xc9, 0xc6, 0x30, 0xdb, 0xfa, 0x83, 0x83, 0xc0, 0x1b, 0xf9, 0x61, 0x75,
	0x45, 0x58, 0x74, 0x3c, 0xd1, 0x14, 0xf8, 0xda, 0x07, 0xa0, 0xc5, 0x01, 0x72, 0x91, 0x0d, 0xac,
	0xf6, 0x05, 0xac, 0x4c, 0x1b, 0x2a, 0x85, 0x7b, 0x7d, 0xba, 0xb5, 0xbb, 0x3a, 0x6b, 0x2e, 0xb5,
	0x48, 0xa9, 0x9b, 0xe3, 0x5f, 0x97, 0xa1, 0x28, 0x7b, 0xb1, 0xd4, 0x1e, 0xe7, 0x2a, 0xe8, 0x66,
	0x10, 0xd9, 0xfb, 0xe6, 0x20, 0x8a, 0x8f, 0x54, 0x13, 0x04, 0x69, 0x88, 0xac, 0x10, 0x51, 0x7b,
	0x35, 0xa5, 0xbf, 0x9b, 0xc9, 0x88, 0x0f, 0xc7, 0xed, 0x90, 0x38, 0x3d, 0x5d, 0x4f, 0x63, 0x49,
	0x6b, 0x89, 0x3e, 0x51, 0x3b, 0xf4, 0x42, 0xf2, 0x3e, 0x30, 0xe6, 0x9d, 0xdf, 0x96, 0xdf, 0x96,
	0x15, 0xab, 0xc8, 0xaf, 0xfb, 0xe6, 0x9e, 0xf9, 0x44, 0x29, 0x9b, 0x69, 0x92, 0xb4, 0x8b, 0x36,
	0x49, 0xcf, 0xde, 0xe7, 0x3c, 0x6b, 0x8c, 0x3c, 0x7b, 0x7f, 0x54, 0x7b, 0x72, 0x8e, 0x23, 0xc7,
	0x9d, 0xe9, 0xf0, 0xba, 0x32, 0x27, 0xa1, 0xd5, 0xc8, 0xfa, 0x73, 0x01, 0x4a, 0xe7, 0x3a, 0x7d,
	0xc5, 0x61, 0x97, 0x55, 0xc2, 0xee, 0x3d, 0xc8, 0xf3, 0xab, 0x12, 0xbe, 0x6f, 0x2c, 0xbc, 0x56,
	0x11, 0xb4, 0xa4, 0x0b, 0x65, 0xcf, 0xb1, 0xfa, 0x93, 0x40, 0x11, 0x71, 0x79, 0x6b, 0x1e, 0x73,
	0xa3, 0xeb, 0x58, 0x33, 0x01, 0x53, 0xf2, 0x14, 0x14, 0x0a, 0x74, 0xd9, 0x89, 0x22, 0x30, 0xbf,
	0x40, 0x60, 0x87, 0x9d, 0xcc, 0x0a, 0x74, 0x15, 0x14, 0xf9, 0x04, 0x34, 0xd4, 0x30, 0x12, 0xdb,
	0x2c, 0xca, 0x7a, 0xeb, 0x2c, 0xe5, 0x26, 0x87, 0xc3, 0xa2, 0x27, 0x20, 0x94, 0x80, 0x2a, 0x71,
	0x09, 0xc5, 0x05, 0x12, 0x3a, 0xec, 0x44, 0x91, 0xe0, 0x0a, 0xe8, 0xb9, 0x63, 0x5b, 0x3d, 0x00,
	0xe8, 0x17, 0x39, 0x00, 0xd4, 0x1e, 0xc0, 0x6a, 0xc2, 0xe2, 0x17, 0x3a, 0xde, 0x3e, 0x80, 0xd5,
	0x84, 0x85, 0x2f, 0x24, 0xe0, 0xa7, 0x50, 0x52, 0xcd, 0xfa, 0x82, 0x8f, 0xc8, 0x28, 0x5e, 0xb5,
	0xf9, 0x8b, 0x3e, 0x81, 0x7f, 0x93, 0x81, 0x57, 0x52, 0x89, 0xc8, 0x03, 0x79, 0xe7, 0x20, 0xee,
	0x7a, 0x6e, 0x2f, 0x94, 0x9a, 0xb8, 0x76, 0xf8, 0xf0, 0xec, 0x8b, 0x83, 0xf9, 0x87, 0xab, 0xdf,
	0xe6, 0x01, 0x26, 0x9f, 0x48, 0xdd, 0x42, 0xae, 0x83, 0x81, 0x41, 0x1f, 0x9f, 0x47, 0xc5, 0xd1,
	0x1e, 0x3c, 0xc7, 0x8a, 0xf7, 0x9d, 0xeb, 0x60, 0x60, 0x4c, 0xc7, 0x04, 0xa2, 0x55, 0x05, 0x97,
	0x9d, 0xc4, 0x04, 0x67, 0x9d, 0x74, 0xef, 0x8d, 0x4f, 0x31, 0x05, 0x5e, 0x2a, 0xae, 0xa6, 0x2f,
	0xbe, 0xc7, 0x69, 0xe2, 0x33, 0x0e, 0x69, 0xaa, 0xfb, 0x49, 0x4a, 0x1e, 0x4d, 0x18, 0xcf, 0xd8,
	0x52, 0xee, 0x49, 0xab, 0x6b, 0xc9, 0xa6, 0x50, 0xe1, 0x9f, 0x31, 0x75, 0xca, 0xe9, 0x5e, 0x4f,
	0x3b, 0xdd, 0xcf, 0xa4, 0x29, 0x5c, 0x34, 0x4d, 0xd9, 0x53, 0xdf, 0x0e, 0x24, 0xb3, 0xb1, 0x98,
	0x59, 0x90, 0x73, 0xe6, 0xf7, 0x41, 0x63, 0xae, 0x25, 0x38, 0x4b, 0x0b, 0x39, 0x8b, 0xcc, 0xb5,
	0x78, 0x76, 0xff, 0xe7, 0xde, 0x5c, 0xfd, 0xaa, 0x00, 0x24, 0x79, 0xe5, 0x99, 0x1a, 0xab, 0xf7,
	0x92, 0xb1, 0x3a, 0xe7, 0xe2, 0x4a, 0x0d, 0xe0, 0x7b, 0xc9, 0x00, 0x9e, 0xc7, 0xa5, 0x44, 0x75,
	0xdc, 0x91, 0xe4, 0xcf, 0xd3, 0x91, 0xa8, 0x29, 0x50, 0x98, 0x9b, 0x02, 0xc5, 0x0b, 0xa4, 0xc0,
	0xd4, 0xa5, 0xa7, 0x96, 0xbc, 0xf4, 0x4c, 0x5a, 0xec, 0x1c, 0x97, 0x9e, 0x7a, 0xf2, 0xd2, 0x33,
	0x45, 0xce, 0xe2, 0x94, 0x80, 0x73, 0xa4, 0x84, 0xf1, 0x3c, 0x29, 0x51, 0x7a, 0xe6, 0x94, 0x28,
	0xff, 0x37, 0xa4, 0xc4, 0xdf, 0xb3, 0x70, 0x69, 0x42, 0xd4, 0x3e, 0xc6, 0x7c, 0xf8, 0x00, 0x60,
	0xf2, 0x08, 0x20, 0xef, 0xe6, 0x2f, 0xa7, 0x4b, 0xa5, 0x0a, 0x25, 0x79, 0x15, 0xb4, 0x2f, 0xbd,
	0xbd, 0x3e, 0x8f, 0x65, 0xb1, 0x3f, 0x14, 0xbf, 0xf4, 0xf6, 0xf8, 0x49, 0x7a, 0x03, 0x74, 0x9c,
	0x52, 0x5b, 0xb9, 0x37, 0xd3, 0x25, 0x72, 0x15, 0x1a, 0x3f, 0xf0, 0xf6, 0x44, 0x47, 0x87, 0x12,
	0xf9, 0x08, 0xed, 0xd3, 0x0e, 0x02, 0x79, 0x57, 0xa0, 0x53, 0x01, 0xcc, 0x86, 0x42, 0xfe, 0x22,
	0xa1, 0x50, 0x3f, 0x02, 0x2d, 0xfe, 0x10, 0x31, 0xa0, 0xb8, 0xd3, 0xee, 0xb4, 0xb6, 0x3a, 0x9f,
	0x56, 0x96, 0x10, 0x78, 0xb8, 0xdd, 0x6d, 0x7e, 0xd6, 0x6e, 0x55, 0x32, 0xa4, 0x04, 0x5a, 0x6f,
	0x77, 0x83, 0xee, 0xe2, 0x54, 0x96, 0x14, 0x20, 0xfb, 0x64, 0xa7, 0x92, 0x13, 0xd8, 0xee, 0xce,
	0x0e, 0x62, 0xf3, 0x44, 0x83, 0xe5, 0x56, 0xf7, 0x47, 0x9d, 0x4a, 0x01, 0x59, 0x9b, 0x74, 0xa3,
	0xf7, 0xa8, 0xdd, 0xaa, 0x14, 0x09, 0x40, 0x61, 0x73, 0x63, 0x6b, 0xbb, 0xdd, 0xaa, 0x68, 0xb7,
	0xde, 0x01, 0x43, 0xc9, 0x66, 0x52, 0x84, 0xdc, 0x46, 0xe7, 0xc7, 0x95, 0x25, 0x64, 0x6d, 0x76,
	0x5b, 0xed, 0x4a, 0x06, 0xa9, 0x9b, 0xdd, 0xce, 0xe6, 0xd6, 0xa7, 0x95, 0xec, 0xad, 0x2e, 0xac,
	0x26, 0xda, 0x5b, 0xb2, 0x0a, 0xe5, 0x5e, 0x73, 0x63, 0xbb, 0xdd, 0x9f, 0x68, 0xfa, 0x12, 0x5c,
	0x12, 0xa8, 0xe6, 0x46, 0xa7, 0xd9, 0xde, 0xde, 0xe6, 0x1a, 0x13, 0x58, 0x91, 0xc8, 0xee, 0xe3,
	0x9d, 0xed, 0xf6, 0x6e, 0xbb, 0x92, 0xbd, 0xb5, 0x09, 0x95, 0xd9, 0x0a, 0x30, 0xbd, 0xe6, 0x89,
	0xae, 0x19, 0x9c, 0xa0, 0x4f, 0x3a, 0x1d, 0xb1, 0xe2, 0x12, 0x68, 0x63, 0x39, 0xb9, 0xf5, 0x6f,
	0xf3, 0x00, 0xcd, 0xb1, 0xe3, 0x48, 0x17, 0x60, 0xf2, 0x36, 0x4f, 0xa6, 0xdb, 0xf3, 0xd9, 0x9f,
	0x16, 0x6a, 0xd7, 0xe6, 0x4d, 0x8b, 0x07, 0xab, 0xfa, 0xd2, 0xff, 0x65, 0xc8, 0x4f, 0x60, 0x65,
	0xfa, 0x79, 0x99, 0xdc, 0x48, 0x72, 0xcd, 0xbc, 0xbf, 0xd7, 0xea, 0x67, 0x91, 0x28, 0xc2, 0x9f,
	0x40, 0x49, 0x7d, 0x19, 0x25, 0xd7, 0x93, 0x7c, 0x53, 0x8f, 0xc7, 0xb5, 0xb5, 0xf9, 0x04, 0x8a,
	0x58, 0x2b, 0xfe, 0x43, 0x43, 0x79, 0x85, 0x23, 0x6f, 0x26, 0x59, 0x93, 0x0f, 0x9d, 0xb5, 0xb7,
	0x16, 0x50, 0x29, 0x5f, 0xb9, 0x0f, 0xfa, 0xf8, 0xfd, 0x8c, 0x4c, 0x95, 0xf6, 0xd9, 0x67, 0xb5,
	0xda, 0xec, 0x4b, 0x5a, 0x7d, 0x89, 0x6c, 0x81, 0xa1, 0xbc, 0x71, 0x90, 0x05, 0x8f, 0x1f, 0xb5,
	0xb9, 0x6f, 0xc2, 0xf5, 0x25, 0xf2, 0x08, 0xca, 0x53, 0x0f, 0x40, 0x64, 0x2d, 0x29, 0x6c, 0xfa,
	0x6d, 0xa8, 0x96, 0xb6, 0x07, 0xd6, 0x97, 0xc8, 0xe7, 0x50, 0x99, 0x7d, 0xcc, 0x21, 0x6f, 0x24,
	0x85, 0x25, 0x9e, 0x7a, 0x6a, 0xaf, 0x9d, 0x51, 0x3c, 0xd0, 0x58, 0x0f, 0xe1, 0x0b, 0x2d, 0x4e,
	0xfe, 0xbd, 0x02, 0x1f, 0xbd, 0xf7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x0a, 0x6d, 0xe4,
	0xfd, 0x24, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	// read API
	StreamApps(ctx context.Context, in *StreamAppsRequest, opts ...grpc.CallOption) (Controller_StreamAppsClient, error)
	StreamReleases(ctx context.Context, in *StreamReleasesRequest, opts ...grpc.CallOption) (Controller_StreamReleasesClient, error)
	StreamScales(ctx context.Context, in *StreamScalesRequest, opts ...grpc.CallOption) (Controller_StreamScalesClient, error)
	StreamDeployments(ctx context.Context, in *StreamDeploymentsRequest, opts ...grpc.CallOption) (Controller_StreamDeploymentsClient, error)
	// write API
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error)
	CreateScale(ctx context.Context, in *CreateScaleRequest, opts ...grpc.CallOption) (*ScaleRequest, error)
	CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error)
	CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) StreamApps(ctx context.Context, in *StreamAppsRequest, opts ...grpc.CallOption) (Controller_StreamAppsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/controller.Controller/StreamApps", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppsClient interface {
	Recv() (*StreamAppsResponse, error)
	grpc.ClientStream
}

type controllerStreamAppsClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppsClient) Recv() (*StreamAppsResponse, error) {
	m := new(StreamAppsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamReleases(ctx context.Context, in *StreamReleasesRequest, opts ...grpc.CallOption) (Controller_StreamReleasesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[1], "/controller.Controller/StreamReleases", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamReleasesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamReleasesClient interface {
	Recv() (*StreamReleasesResponse, error)
	grpc.ClientStream
}

type controllerStreamReleasesClient struct {
	grpc.ClientStream
}

func (x *controllerStreamReleasesClient) Recv() (*StreamReleasesResponse, error) {
	m := new(StreamReleasesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamScales(ctx context.Context, in *StreamScalesRequest, opts ...grpc.CallOption) (Controller_StreamScalesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[2], "/controller.Controller/StreamScales", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamScalesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamScalesClient interface {
	Recv() (*StreamScalesResponse, error)
	grpc.ClientStream
}

type controllerStreamScalesClient struct {
	grpc.ClientStream
}

func (x *controllerStreamScalesClient) Recv() (*StreamScalesResponse, error) {
	m := new(StreamScalesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamDeployments(ctx context.Context, in *StreamDeploymentsRequest, opts ...grpc.CallOption) (Controller_StreamDeploymentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[3], "/controller.Controller/StreamDeployments", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamDeploymentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamDeploymentsClient interface {
	Recv() (*StreamDeploymentsResponse, error)
	grpc.ClientStream
}

type controllerStreamDeploymentsClient struct {
	grpc.ClientStream
}

func (x *controllerStreamDeploymentsClient) Recv() (*StreamDeploymentsResponse, error) {
	m := new(StreamDeploymentsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error) {
	out := new(App)
	err := c.cc.Invoke(ctx, "/controller.Controller/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateScale(ctx context.Context, in *CreateScaleRequest, opts ...grpc.CallOption) (*ScaleRequest, error) {
	out := new(ScaleRequest)
	err := c.cc.Invoke(ctx, "/controller.Controller/CreateScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error) {
	out := new(Release)
	err := c.cc.Invoke(ctx, "/controller.Controller/CreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[4], "/controller.Controller/CreateDeployment", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerCreateDeploymentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_CreateDeploymentClient interface {
	Recv() (*DeploymentEvent, error)
	grpc.ClientStream
}

type controllerCreateDeploymentClient struct {
	grpc.ClientStream
}

func (x *controllerCreateDeploymentClient) Recv() (*DeploymentEvent, error) {
	m := new(DeploymentEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	// read API
	StreamApps(*StreamAppsRequest, Controller_StreamAppsServer) error
	StreamReleases(*StreamReleasesRequest, Controller_StreamReleasesServer) error
	StreamScales(*StreamScalesRequest, Controller_StreamScalesServer) error
	StreamDeployments(*StreamDeploymentsRequest, Controller_StreamDeploymentsServer) error
	// write API
	UpdateApp(context.Context, *UpdateAppRequest) (*App, error)
	CreateScale(context.Context, *CreateScaleRequest) (*ScaleRequest, error)
	CreateRelease(context.Context, *CreateReleaseRequest) (*Release, error)
	CreateDeployment(*CreateDeploymentRequest, Controller_CreateDeploymentServer) error
}

// UnimplementedControllerServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServer struct {
}

func (*UnimplementedControllerServer) StreamApps(req *StreamAppsRequest, srv Controller_StreamAppsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamApps not implemented")
}
func (*UnimplementedControllerServer) StreamReleases(req *StreamReleasesRequest, srv Controller_StreamReleasesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamReleases not implemented")
}
func (*UnimplementedControllerServer) StreamScales(req *StreamScalesRequest, srv Controller_StreamScalesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamScales not implemented")
}
func (*UnimplementedControllerServer) StreamDeployments(req *StreamDeploymentsRequest, srv Controller_StreamDeploymentsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeployments not implemented")
}
func (*UnimplementedControllerServer) UpdateApp(ctx context.Context, req *UpdateAppRequest) (*App, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApp not implemented")
}
func (*UnimplementedControllerServer) CreateScale(ctx context.Context, req *CreateScaleRequest) (*ScaleRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScale not implemented")
}
func (*UnimplementedControllerServer) CreateRelease(ctx context.Context, req *CreateReleaseRequest) (*Release, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelease not implemented")
}
func (*UnimplementedControllerServer) CreateDeployment(req *CreateDeploymentRequest, srv Controller_CreateDeploymentServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateDeployment not implemented")
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_StreamApps_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamAppsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamApps(m, &controllerStreamAppsServer{stream})
}

type Controller_StreamAppsServer interface {
	Send(*StreamAppsResponse) error
	grpc.ServerStream
}

type controllerStreamAppsServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppsServer) Send(m *StreamAppsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamReleases_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamReleasesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamReleases(m, &controllerStreamReleasesServer{stream})
}

type Controller_StreamReleasesServer interface {
	Send(*StreamReleasesResponse) error
	grpc.ServerStream
}

type controllerStreamReleasesServer struct {
	grpc.ServerStream
}

func (x *controllerStreamReleasesServer) Send(m *StreamReleasesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamScales_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamScalesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamScales(m, &controllerStreamScalesServer{stream})
}

type Controller_StreamScalesServer interface {
	Send(*StreamScalesResponse) error
	grpc.ServerStream
}

type controllerStreamScalesServer struct {
	grpc.ServerStream
}

func (x *controllerStreamScalesServer) Send(m *StreamScalesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamDeployments_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamDeploymentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamDeployments(m, &controllerStreamDeploymentsServer{stream})
}

type Controller_StreamDeploymentsServer interface {
	Send(*StreamDeploymentsResponse) error
	grpc.ServerStream
}

type controllerStreamDeploymentsServer struct {
	grpc.ServerStream
}

func (x *controllerStreamDeploymentsServer) Send(m *StreamDeploymentsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).UpdateApp(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CreateScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateScale(ctx, req.(*CreateScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateRelease(ctx, req.(*CreateReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateDeployment_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateDeploymentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).CreateDeployment(m, &controllerCreateDeploymentServer{stream})
}

type Controller_CreateDeploymentServer interface {
	Send(*DeploymentEvent) error
	grpc.ServerStream
}

type controllerCreateDeploymentServer struct {
	grpc.ServerStream
}

func (x *controllerCreateDeploymentServer) Send(m *DeploymentEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateApp",
			Handler:    _Controller_UpdateApp_Handler,
		},
		{
			MethodName: "CreateScale",
			Handler:    _Controller_CreateScale_Handler,
		},
		{
			MethodName: "CreateRelease",
			Handler:    _Controller_CreateRelease_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamApps",
			Handler:       _Controller_StreamApps_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamReleases",
			Handler:       _Controller_StreamReleases_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamScales",
			Handler:       _Controller_StreamScales_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamDeployments",
			Handler:       _Controller_StreamDeployments_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateDeployment",
			Handler:       _Controller_CreateDeployment_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "controller.proto",
}
